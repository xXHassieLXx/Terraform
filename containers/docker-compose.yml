services:
  reverse-proxy:
    image: nginxproxy/nginx-proxy:alpine
    container_name: 'Reverse-proxy'
    restart: always
    ports: 
      - 80:80
      - 443:443
    environment:
      - VIRTUAL_HOST=${DOMAIN}
      - VIRTUAL_PATH=/.well_know
    volumes:
      - /volumes/nginx/certs:/etc/nginx/certs:ro
      - /volumes/nginx/vhostd:/etc/nginx/vhostd.d 
      - /volumes/nginx/html:/usr/share/nginx/html:rw
      - /var/run/docker.sock:/tmp/docker.sock:ro


  lets-encrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: 'Lets-Encrypt'
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=Reverse-proxy
      - /volumes/nginx/certs:/etc/nginx/certs
      - /volumes/nginx/vhostd:/etc/nginx/vhostd.d 
      - /volumes/nginx/html:/usr/share/nginx/html:rw
      - /var/run/docker.sock:/var/runS/docker.sock:ro


  mysql:
    image: mysql
    container_name: mysql_container
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
    volumes:
      - mysql_todo_api:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p${MYSQL_PASSWORD} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  todo-api:
    image: saraymartinez002/examen_2parcial:latest
    container_name: TodoApi
    expose:
      - "3000"
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DB: ${MYSQL_DB}
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      VIRTUAL_HOST: ${DOMAIN}
      VIRTUAL_PATH: /
      LETSENCRYPT_HOST: ${DOMAIN}
      LETSENCRYPT_EMAIL: ${USER_EMAIL}
    depends_on:
      mysql:
        condition: service_healthy
  
  todo-app:
    image: hassielam/hassiel-server-page:latest
    container_name: TodoApp
    expose:
      - "80"


volumes:
  mysql_todo_api: